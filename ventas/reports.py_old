# -*- coding: utf-8 -*- 

from django.http import HttpResponse

from reportlab.pdfgen import canvas
from reportlab.lib.units import cm

from extra.globals import *
from datetime import date
from ventas.models import *

from num2words import num2words

def imprimir_remision_grafiexpress(request, pk):
    # Crear el objeto HttpResponse
    response = HttpResponse(content_type='application/pdf')
    response['Content-Disposition'] = 'attachment; filename=remision_grafiexpress.pdf'

    # Crear el objeto PDF, usando el objeto response
    p = canvas.Canvas(response)

    # Fijar tamaño de la hoja
    p.setPageSize((21*cm, 24*cm))

    # Fijar tipo y tamaño de letra
    p.setFont("Times-Roman", 7)


    ################ Escribir textos flotantes en coordenadas (X,Y) ################

    remision = Remision.objects.get(pk=pk)

    # fecha de emision
    p.drawString(4*cm,19.5*cm, date.today().strftime("%d/%m/%Y")) 

    # Nombre o razon social
    p.drawString(4*cm,18.7*cm, remision.cliente.razon_social)
    
    # RUC o CI
    p.drawString(15*cm,18.7*cm, remision.cliente.ruc)
    
    # Domicilio
    p.drawString(3*cm,18.4*cm, remision.cliente.direccion)
    
    # Close the PDF object cleanly, and we're done.
    p.showPage()
    p.save()
    return response

def imprimir_venta_grafiexpress(request, pk):
    # Crear el objeto HttpResponse
    response = HttpResponse(content_type='application/pdf')
    response['Content-Disposition'] = 'attachment; filename=venta_grafiexpress.pdf'

    # Crear el objeto PDF, usando el objeto response
    p = canvas.Canvas(response)

    # Fijar tamaño de la hoja
    p.setPageSize((20.5*cm, 28*cm))

    # Fijar tipo y tamaño de letra
    p.setFont("Times-Roman", 7)


    ################ Escribir textos flotantes en coordenadas (X,Y) ################

    venta = Venta.objects.get(pk=pk)

    # fecha
    p.drawString(2.5*cm,22.3*cm, venta.fecha_de_emision.strftime("%d") ) # dia

    numero_del_mes = int(venta.fecha_de_emision.strftime("%m")) # mes
    if(numero_del_mes==1):
        p.drawString(4.5*cm,22.3*cm, 'enero')
    elif(numero_del_mes==2):
        p.drawString(4.5*cm,22.3*cm, 'febrero')
    elif(numero_del_mes==3):
        p.drawString(4.5*cm,22.3*cm, 'marzo')
    elif(numero_del_mes==4):
        p.drawString(4.5*cm,22.3*cm, 'abril')
    elif(numero_del_mes==5):
        p.drawString(4.5*cm,22.3*cm, 'mayo')
    elif(numero_del_mes==6):
        p.drawString(4.5*cm,22.3*cm, 'junio')
    elif(numero_del_mes==7):
        p.drawString(4.5*cm,22.3*cm, 'julio')
    elif(numero_del_mes==8):
        p.drawString(4.5*cm,22.3*cm, 'agosto')
    elif(numero_del_mes==9):
        p.drawString(4.5*cm,22.3*cm, 'setiembre')
    elif(numero_del_mes==10):
        p.drawString(4.5*cm,22.3*cm, 'octubre')
    elif(numero_del_mes==11):
        p.drawString(4.5*cm,22.3*cm, 'noviembre')
    elif(numero_del_mes==12):
        p.drawString(4.5*cm,22.3*cm, 'diciembre')

    p.drawString(8.5*cm,22.3*cm, venta.fecha_de_emision.strftime("%Y") ) # año

    # condicion de la venta
    if(venta.condicion==CONTADO):
        p.drawString(15*cm,22.3*cm, 'X' ) # contado
    else:
        p.drawString(17*cm,22.3*cm, 'X' ) # credito

    # cliente
    p.drawString(2.5*cm,21.5*cm, venta.cliente.razon_social ) 

    # condicion de pago
    #p.drawString(15.5*cm,21.5*cm, venta.condicion_de_pago) 

    # Direccion
    p.drawString(2.5*cm,21*cm, venta.cliente.direccion)

    # RUC o CI
    p.drawString(14.5*cm,21*cm, venta.cliente.ruc)

    # Remisiones
    cadena_de_remisiones = ''
    for remision in venta.remision.all():
        cadena_de_remisiones = cadena_de_remisiones + remision.get_numero_de_remision()
    p.drawString(3*cm,20.3*cm, cadena_de_remisiones)
    
    # Telefono
    p.drawString(13.5*cm,20.3*cm, venta.cliente.telefono)
    
    # subtotal 
    p.drawString(13*cm,9.7*cm, separador_de_miles(venta.get_subtotal_exenta())) # exentas
    p.drawString(15*cm,9.7*cm, separador_de_miles(venta.get_subtotal_iva_5())) # iva 5%
    p.drawString(16.5*cm,9.7*cm, separador_de_miles(venta.get_subtotal_iva_10())) # iva 10%

    # total
    p.drawString(16.5*cm,9*cm, separador_de_miles(venta.total))

    # ivas
    p.drawString(3*cm,8.2*cm, separador_de_miles(venta.get_iva_5())) # total iva 5
    p.drawString(7*cm,8.2*cm, separador_de_miles(venta.get_iva_10())) # total iva 10
    p.drawString(13*cm,8.2*cm, separador_de_miles(venta.get_total_iva())) # total iva

    # total en letras
    p.drawString(5*cm,7.5*cm, num2words(venta.total, lang='es'))


    # Close the PDF object cleanly, and we're done.
    p.showPage()
    p.save()
    return response

